---
- name: Enable epel repo
  yum: name=epel-release state=installed

- name: Install docker py
  yum: name={{item}} state=installed
  with_items:
    - docker

- name: Enable Docker registry
  replace: >
    dest=/etc/sysconfig/docker
    regexp="^#?\s*ADD_REGISTRY=.*"
    replace='ADD_REGISTRY="--add-registry {{ public_registry }}:5000 --add-registry registry.centos.org"'

- name: Restart Docker
  service: name=docker state=restarted enabled=yes



#Push ca cert to slave for worker
- name: Ensure /opt/cccp-service/beanstalk_worker dir exists on Jenkins slaves
  file: dest=/opt/cccp-service/beanstalk_worker state=directory

- name: Push oc files to Jenkins slaves
  synchronize:
    mode: push
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    rsync_opts:
        - "{{ rsync_ssh_opts }}"
  with_items:
    - {src: /tmp/oc_ca.crt, dest: /opt/cccp-service/beanstalk_worker/ca.crt}
    - {src: /tmp/oc_node.kubeconfig, dest: /opt/cccp-service/beanstalk_worker/node.kubeconfig}

- name: Get openshift build scripts
  copy:
    src: ../../../../../beanstalk_worker
    dest: /opt/cccp-service/beanstalk_worker
    mode: u+x
  when: not vagrant

- name: Replace Beanstalk server with its FQDN for dispatcher
  replace: >
      dest=/opt/cccp-service/beanstalk_worker/worker_dispatcher.py
      regexp="BEANSTALK_SERVER"
      replace='{{ groups['openshift'][0] }}'

- name: Replace Beanstalk server with its FQDN for dispatcher
  replace: >
      dest=/opt/cccp-service/beanstalk_worker/worker_start_build.py
      regexp="BEANSTALK_SERVER"
      replace='{{ groups['openshift'][0] }}'

- name: Replace Beanstalk server with its FQDN for dispatcher
  replace: >
      dest=/opt/cccp-service/beanstalk_worker/worker_start_delivery.py
      regexp="BEANSTALK_SERVER"
      replace='{{ groups['openshift'][0] }}'

- name: Build dispatcher-worker image
  shell: docker build -t dispatcher-worker -f ./Dockerfile.dispatcher_worker .
  args:
      chdir: /opt/cccp-service/beanstalk_worker

- name: Build build-worker image
  shell: docker build -t build-worker -f ./Dockerfile.build_worker .
  args:
      chdir: /opt/cccp-service/beanstalk_worker

- name: Build delivery-worker image
  shell: docker build -t delivery-worker -f ./Dockerfile.delivery_worker .
  args:
      chdir: /opt/cccp-service/beanstalk_worker

- name: Start dispatcher worker
  docker: 
      name: dispatcher-worker
      state: started
      image: dispatcher-worker

- name: Start build worker
  docker: 
      name: dispatcher-worker
      state: started
      image: build-worker

- name: Start delivery worker
  docker: 
      name: dispatcher-worker
      state: started
      image: delivery-worker
